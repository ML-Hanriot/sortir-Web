security:
    password_hashers:
        App\Entity\Participant:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\Participant
                property: mail

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: app_sorties  # Redirection après connexion
                enable_csrf: true

            logout:
                path: app_logout
                target: app_login
            # Configuration de ton firewall principal (probablement "main")
            remember_me:
                         secret: '%kernel.secret%'  # Utiliser un secret pour sécuriser le cookie
                         lifetime: 604800             # Durée de vie du cookie (en secondes, ici 1 semaine)
                         path: /                  # Chemin où le cookie est actif
                         always_remember_me: false    # Option pour ne pas l'activer automatiquement
                         remember_me_parameter: '_remember_me' # Nom du paramètre dans le formulaire

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login$, roles: PUBLIC_ACCESS}
        - { path: ^/, roles: ROLE_USER}
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
